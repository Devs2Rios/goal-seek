{"version":3,"sources":["components/CourseGoals/CourseGoalItem/CourseGoalItem.js","components/CourseGoals/CourseGoalList/CourseGoalList.js","components/UI/Button/Button.js","components/CourseGoals/CourseInput/CourseInput.js","App.js","index.js"],"names":["CourseGoalItem","props","className","onClick","onDelete","id","children","CourseGoalList","style","items","map","goal","onDeleteItem","text","Button","styled","button","FormControl","div","invalid","CourseInput","useState","enteredValue","setEnteredValue","isValid","setIsValid","onSubmit","event","preventDefault","inputValue","target","firstChild","lastChild","value","onAddGoal","type","onChange","val","trim","length","App","courseGoals","setCourseGoals","content","textAlign","goalId","prevGoals","filter","enteredText","updatedGoals","unshift","Math","random","toString","ReactDOM","createRoot","document","getElementById","render"],"mappings":"8QAmBeA,EAfQ,SAAAC,GAQrB,OACE,oBAAIC,UAAU,YAAYC,QANN,WAEpBF,EAAMG,SAASH,EAAMI,GACtB,EAGC,SACGJ,EAAMK,UAGZ,E,iBCKcC,EAjBQ,SAAAN,GACrB,OAEE,aADA,CACA,MAAIC,UAAWM,IAAM,aAArB,SACGP,EAAMQ,MAAMC,KAAI,SAAAC,GAAI,OACnB,cAAC,EAAD,CAEEN,GAAIM,EAAKN,GACTD,SAAUH,EAAMW,aAHlB,SAKGD,EAAKE,MAJDF,EAAKN,GAFO,KAW1B,E,cCecS,EAjCAC,IAAOC,OAAV,gcCINC,EAAcF,IAAOG,IAAV,ukBAOJ,SAAAjB,GAAK,OAAKA,EAAMkB,QAAU,MAAQ,OAA7B,IAMM,SAAAlB,GAAK,OAAKA,EAAMkB,QAAU,MAAQ,MAA7B,IACL,SAAAlB,GAAK,OACvBA,EAAMkB,QAAU,qBAAuB,OADhB,IA4DdC,EAtCK,SAAAnB,GAClB,MAAwCoB,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,OAC0BF,oBAAS,GADnC,mBACGG,EADH,KACYC,EADZ,KAmBA,OACE,uBAAMC,SAXkB,SAAAC,GACxBA,EAAMC,iBACN,IAAMC,EAAaF,EAAMG,OAAOC,WAAWC,UAAUC,MACjDT,GAAWK,GACb5B,EAAMiC,UAAUZ,GAElBC,EAAgB,IAChBE,GAAW,EACZ,EAGC,UAIE,eAACR,EAAD,CAAaE,SAAUK,EAAvB,UACE,gDACA,uBACEW,KAAK,OACLF,MAAOX,EACPc,SA1BuB,SAAAT,GAC7B,IAAMU,EAAMV,EAAMG,OAAOG,MACzBV,EAAgBc,GAChBZ,KAAWY,EAAIC,OAAOC,OAAS,GAAKF,GACrC,OAyBG,cAAC,EAAD,CAAQF,KAAK,SAAb,wBAGL,ECtBcK,G,MAlDH,WACV,MAAsCnB,mBAAS,CAC7C,CAAER,KAAM,oBAAqBR,GAAI,MACjC,CAAEQ,KAAM,qBAAsBR,GAAI,QAFpC,mBAAOoC,EAAP,KAAoBC,EAApB,KAoBIC,EACF,mBAAGnC,MAAO,CAAEoC,UAAW,UAAvB,4CASF,OANIH,EAAYF,OAAS,IACvBI,EACE,cAAC,EAAD,CAAgBlC,MAAOgC,EAAa7B,aAbd,SAAAiC,GACxBH,GAAe,SAAAI,GAEb,OADqBA,EAAUC,QAAO,SAAApC,GAAI,OAAIA,EAAKN,KAAOwC,CAAhB,GAE3C,GACF,KAaC,gCACE,yBAASxC,GAAG,YAAZ,SACE,cAAC,EAAD,CAAa6B,UA5BI,SAAAc,GACrBN,GAAe,SAAAI,GACb,IAAMG,EAAY,YAAOH,GAEzB,OADAG,EAAaC,QAAQ,CAAErC,KAAMmC,EAAa3C,GAAI8C,KAAKC,SAASC,aACrDJ,CACR,GACF,MAwBG,yBAAS5C,GAAG,QAAZ,SACGsC,MAWR,GChDYW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAO,cAAC,EAAD,I","file":"static/js/main.5076cb56.chunk.js","sourcesContent":["import React from 'react';\n\nimport './CourseGoalItem.css';\n\nconst CourseGoalItem = props => {\n  // const [deleteText, setDeleteText] = useState('');\n\n  const deleteHandler = () => {\n    // setDeleteText('(Deleted!)');\n    props.onDelete(props.id);\n  };\n\n  return (\n    <li className=\"goal-item\" onClick={deleteHandler}>\n      {props.children}\n    </li>\n  );\n};\n\nexport default CourseGoalItem;\n","import React from 'react';\n\nimport CourseGoalItem from '../CourseGoalItem/CourseGoalItem';\nimport style from './CourseGoalList.css';\n\nconst CourseGoalList = props => {\n  return (\n    /* Style modile */\n    <ul className={style['goal-list']}>\n      {props.items.map(goal => (\n        <CourseGoalItem\n          key={goal.id}\n          id={goal.id}\n          onDelete={props.onDeleteItem}\n        >\n          {goal.text}\n        </CourseGoalItem>\n      ))}\n    </ul>\n  );\n};\n\nexport default CourseGoalList;\n","import styled from 'styled-components';\n\nconst Button = styled.button`\n  font: inherit;\n  padding: 0.5rem 1.5rem;\n  border: 1px solid #8b005d;\n  color: white;\n  background: #8b005d;\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.26);\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n  }\n\n  &:hover,\n  &:active {\n    background: #ac0e77;\n    border-color: #ac0e77;\n    box-shadow: 0 0 8px rgba(0, 0, 0, 0.26);\n  }\n\n  @media screen and (max-width: 700px) {\n    width: 100%;\n  }\n`;\n\n/* const Button = props => {\n  return (\n    <button type={props.type} className='button' onClick={props.onClick}>\n      {props.children}\n    </button>\n  );\n}; Component no longer needed*/\n\nexport default Button;\n","import { useState } from 'react';\n\nimport Button from '../../UI/Button/Button';\nimport styled from 'styled-components';\n\n// Use the props with an arrow function to dynamically change your styles ``\nconst FormControl = styled.div`\n  margin: 0.5rem 0;\n\n  & label {\n    font-weight: bold;\n    display: block;\n    margin-bottom: 0.5rem;\n    color: ${props => (props.invalid ? 'red' : 'black')};\n  }\n\n  & input {\n    display: block;\n    width: 100%;\n    border: 1px solid ${props => (props.invalid ? 'red' : '#ccc')};\n    background-color: ${props =>\n      props.invalid ? 'rgb(255, 200, 200)' : 'white'};\n    font: inherit;\n    line-height: 1.5rem;\n    padding: 0 0.25rem;\n  }\n\n  &.invalid label {\n    color: red;\n  }\n  &.invalid input {\n    border-color: red;\n    background-color: rgb(255, 200, 200);\n  }\n\n  & input:focus {\n    outline: none;\n    background: #fad0ec;\n    border-color: #8b005d;\n  }\n`;\n\nconst CourseInput = props => {\n  const [enteredValue, setEnteredValue] = useState(''),\n    [isValid, setIsValid] = useState(true);\n\n  const goalInputChangeHandler = event => {\n    const val = event.target.value;\n    setEnteredValue(val);\n    setIsValid(val.trim().length > 0 && val ? true : false);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    const inputValue = event.target.firstChild.lastChild.value;\n    if (isValid && inputValue) {\n      props.onAddGoal(enteredValue);\n    }\n    setEnteredValue('');\n    setIsValid(true);\n  };\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      {/* You can manage nested classes using className */}\n      {/* <FormControl className={isValid ? '' : 'invalid'}> */}\n      {/* Or by passing props to the styled component */}\n      <FormControl invalid={!isValid}>\n        <label>Course Goal</label>\n        <input\n          type='text'\n          value={enteredValue}\n          onChange={goalInputChangeHandler}\n        />\n      </FormControl>\n      <Button type='submit'>Add Goal</Button>\n    </form>\n  );\n};\n\nexport default CourseInput;\n","import React, { useState } from 'react';\n\nimport CourseGoalList from './components/CourseGoals/CourseGoalList/CourseGoalList';\nimport CourseInput from './components/CourseGoals/CourseInput/CourseInput';\nimport './App.css';\n\nconst App = () => {\n  const [courseGoals, setCourseGoals] = useState([\n    { text: 'Do all exercises!', id: 'g1' },\n    { text: 'Finish the course!', id: 'g2' }\n  ]);\n\n  const addGoalHandler = enteredText => {\n    setCourseGoals(prevGoals => {\n      const updatedGoals = [...prevGoals];\n      updatedGoals.unshift({ text: enteredText, id: Math.random().toString() });\n      return updatedGoals;\n    });\n  };\n\n  const deleteItemHandler = goalId => {\n    setCourseGoals(prevGoals => {\n      const updatedGoals = prevGoals.filter(goal => goal.id !== goalId);\n      return updatedGoals;\n    });\n  };\n\n  let content = (\n    <p style={{ textAlign: 'center' }}>No goals found. Maybe add one?</p>\n  );\n\n  if (courseGoals.length > 0) {\n    content = (\n      <CourseGoalList items={courseGoals} onDeleteItem={deleteItemHandler} />\n    );\n  }\n\n  return (\n    <div>\n      <section id=\"goal-form\">\n        <CourseInput onAddGoal={addGoalHandler} />\n      </section>\n      <section id=\"goals\">\n        {content}\n        {/* {courseGoals.length > 0 && (\n          <CourseGoalList\n            items={courseGoals}\n            onDeleteItem={deleteItemHandler}\n          />\n        ) // <p style={{ textAlign: 'center' }}>No goals found. Maybe add one?</p>\n        } */}\n      </section>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}